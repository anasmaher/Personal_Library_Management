@model IEnumerable<LibraryManagement.Models.Book>

@{
    TempData["BackButton"] = "Author";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <style>
        body {
            background-color: #121212; /* Dark background color for body */
            color: #e0e0e0; /* Light text color for contrast */
        }

        .glass-container {
            background: rgba(255, 255, 255, 0.1); /* Semi-transparent white background */
            backdrop-filter: blur(10px); /* Blur effect for glass look */
            border-radius: 10px; /* Rounded corners for glass effect */
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5); /* Shadow for depth */
            margin-bottom: 20px;
        }

        .card {
            transition: transform 0.4s, box-shadow 0.4s;
            border-radius: 10px; /* Rounded corners for card */
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.7); /* Softer shadow for card */
            padding: 20px; /* Increased padding for better spacing */
            background-color: rgba(30, 30, 30, 0.8); /* Dark semi-transparent background */
            color: #e0e0e0; /* Light text color inside card */
        }

        .btn-outline-warning, .btn-outline-info, .btn-outline-danger {
            border-radius: 25px; /* More rounded corners for buttons */
            border-width: 1px; /* Thinner border */
            padding: 10px 20px; /* Slightly larger padding */
            font-size: 14px; /* Slightly larger font size */
            text-transform: uppercase;
            font-weight: 500; /* Slightly lighter font weight */
            letter-spacing: 0.5px; /* Reduced letter spacing */
            transition: background-color 0.3s, color 0.3s;
        }

        .btn-outline-warning {
            border-color: #ffc107;
            color: #ffc107;
        }

            .btn-outline-warning:hover {
                background-color: #ffc107;
                color: white;
            }

        .btn-outline-info {
            border-color: #17a2b8;
            color: #17a2b8;
        }

            .btn-outline-info:hover {
                background-color: #17a2b8;
                color: white;
            }

        .btn-outline-danger {
            border-color: #dc3545;
            color: #dc3545;
        }

            .btn-outline-danger:hover {
                background-color: #dc3545;
                color: white;
            }

        .card-title {
            font-size: 1.5rem; /* Slightly larger font size */
            font-weight: 600;
            color: #e0e0e0; /* Light text color */
        }

        .d-flex {
            display: flex;
            gap: 15px; /* Increased spacing between buttons */
        }

        .container {
            margin-top: 20px;
        }

        .text-center {
            margin-bottom: 20px;
        }

        .btn-primary {
            background: #333;
            border-width: 2px;
            border-color: black;
        }

            .btn-primary:hover {
                background: black;
                color: white;
                border-color: black;
            }

        table {
            width: 100%;
            border-collapse: collapse;
            background-color: rgba(30, 30, 30, 0.8); /* Dark background for table */
        }

        th, td {
            padding: 12px;
            text-align: left;
            color: #e0e0e0; /* Light text color for table */
            border-bottom: 1px solid #444; /* Subtle border for rows */
        }

        th {
            background-color: #333; /* Darker background for headers */
        }

        tr:hover {
            background-color: #555; /* Highlight row on hover */
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="text-center my-4">Books by @ViewData["Author"].ToString()</h1>

        <div class="glass-container">
            <table>
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => book.Name)</td>
                            <td>@Html.DisplayFor(modelItem => book.Description)</td>
                            <td>
                                <div class="d-flex">
                                    <a asp-action="Details" asp-controller="Book" asp-route-id="@book.Id" class="btn btn-sm btn-outline-info">Details</a>
                                    <a asp-action="Edit" asp-controller="Book" asp-route-id="@book.Id" class="btn btn-sm btn-outline-warning">Edit</a>
                                    <a asp-action="Delete" asp-controller="Book" asp-route-id="@book.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="text-center">
            <a asp-action="AddBooksToAuthor" asp-controller="Author" asp-route-id="@ViewBag.AuthorId" class="btn btn-primary">Add Book to Author</a>
        </div>

        <div class="text-center mt-3">
            <a asp-action="Index" class="btn btn-primary">Back to Authors List</a>
        </div>
    </div>
</body>
</html>
